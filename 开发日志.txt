12月5日周六凌晨:
任务：写管理员删除功能
问题：privateList没有删除 submit没有写在app.js中间件
最终：privateList是无所谓的 因为获取"我的发布"刚开始我以为要去private取他所有的发布Id再回去show匹配
但是其实用OPENID匹配即可
失败

12月7日周日下午-晚上：
任务：管理员删除功能 整理代码

优化空间：
viplist用昵称标注

写掉收藏:
随便你点，切换页面时把点的上传，
如果没操作 不上传
如果操作了 上传


submit和收藏都应该写成一个nowshouldsend

正常写法：
预处理好星星是否应该显示 
点击后：判断是在添加还是删除 把数据传给云 并在本地同步好星星显示状态（关键在于星星的变换是取决于showArr的元素 而非判断它的_id是否属于数组）
缺点在于预处理麻烦，获取后还得去改变showArr让星星初始状态正常

我的写法：
从app.js生成全局的数组 存放收藏夹
点击后先在本地修改数组 然后要整个数组上传
上传之后不用再更新一遍了 因为html和临时数组可以双向绑定
如果上传失败的话 再更新回来就行了
如果整个上传：云函数可以直接update
如果判断增加还是修改：还得分判断

2021.2.15
初步目标：用固定格式的数据 完成所有UI
1:位置
2:分类UI
3:周边资讯

spacebetween是比较好的对称解决方案

2021.2.16
利用temp会导致wxs作用域 使星星不能读取当前loveArr

 
解决办法：
网络层面：在get id快照的时候把收藏夹get下来 然后放在本地

原来： 


点击进入详情可以重新拿一次数据 无所谓的 所以不要传index 传个id进去就行

规范一下后端接口吧哥哥 


2.18待办：
信息流详情页界面完善（下面几个按钮）

提高获取数据流的可复用性和可读性
需要什么数据流 就拿什么 这点很重要 然后用假数据完成测试

写资讯页详情（奇葩）

请求数据的逻辑：

app.js请求个人数据

1：根据页面需要 请求数据快照(数据多而小) （在page请求就行了）并存放在页面数据

2：对快照进行处理(切割、拼接) （用wxs处理）

3：向后端发送_id组 请求对应的单页数据（数据少但大）

4：将单页数据载入组件

下拉等操作 通过page.js生命周期 触发处理 

1：page根据需求向云请求_id快照 
2：调用wxs逻辑块处理快照
3：处理后再次向云请求单页数据
4：将该单页数据载入组件模板
5：page监听下拉操作 重复执行2


1：page根据需求向云请求_id快照 
2：将_id快照载入组件
3：组件调用wxs逻辑块处理快照 
4：处理后再次向云请求单页数据（仍在组件内完成）
5：将数据更新到组件模板
6：page监听下拉操作 重复执行3

开发日志：
2.3-2.8
放假
阅读代码
制定技术方案
确认需求
2.9-2.17
春节休息走亲戚
期间页面布局完成
2.18
组件化局部重构完成
2.19
搜索与跳转逻辑完成
2.20
发布逻辑和编辑逻辑完成

2.21
收藏功能
2.22
写资讯页面
完成全部布局
2.23
写管理员操作
收尾

submit的添加私有可以抽离出来

隐患
在云端环境没有进行任何保险操作（互斥id等）

2.23：
写我的发布、写资讯页面、跑通整个逻辑


最沙雕的问题：有些能力是页面提供的 这就需要每个页面都写一遍 而不能集成到组件之中

忘记把单元的数据提前抽象成一个对象了 导致一改就要导出改

toDetail 和 长按 都是绑定执行函数 但是toDetail是共同的 长按弹窗是各不相同的 所以用trigger将事件向上传递至page处理

我觉得要把读取置顶写在init里

管理员page
页面：
轮播图
长按可上传或删除图片 最多五张

精选：
长按可上传或删除图片 最多三张
进入可以上传资讯 
信息流：

最终点击提交才会更改所有（可不可以写成一个云函数）

修改已完成状态还没写

管理员选择图片后 先压到本地数组url 然后确认后转换为云url

app.globaldata根本没用 不然可以请求下来作为kindArr的 最后抽离成一个组件方法了

索引会在查询表时命中

现在的问题是：
1：不能一次拿到超过100的数据
2：没办法